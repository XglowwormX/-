1. 中国标准时间  转成 年-月-日 时：分：秒
    function fun(需要转换的标准时间) {
      var res = new Date(需要转换的标准时间);
      var resDate = res.getFullYear() + "-" ((res.getMonth() + 1) >= 10 ? (res.getMonth() + 1) : "0" + (res.getMonth() + 1)) + "-"
                  + (res.getDate() < 10 ? "0" + res.getDate() : res.getDate())
                  + " "
                  + (res.getHours() < 10 ? "0" + res.getHours() : res.getHours()) + ":"
                  + (res.getMinutes() < 10 ? "0" + res.getMinutes() : res.getMinutes()) + ":"
                  + (res.getSeconds() < 10 ? "0" + res.getSeconds() : res.getSeconds());
      return resDate;
    }
    
    
    
2. new Date(new Date().getTime() - 1 * 60 * 60 * 1000);                       //当前时间减一个小时


3. 将一段时间里的每一天提取出来放进数组（'2017-09-10', '2017-10-12'）
    function getDayAll (begin, end) {
        var dateAllArr = new Array();
        var ab = begin.split('-');
        var ae = end.split('-');
        var db = new Date();
        db.setUTCFullYear(ab[0], ab[1]-1, ab[2]);
        var de = new Date();
        de.setUTCFullYear(ae[0], ae[1]-1, ae[2]-1);
        var unixDb = db.getTime();
        var unixDe = de.getTime();
        for (var k = unixDb; k <= unixDe;) {
            dateAllArr.push((new Date(parseInt(k))).format().toString());
            k += 24*60*60*1000;
        }
        return dateAllArr;
    }
    
    Date.prototype.format = function () {
        var s = '';
        s += this.getFullYear() + '-';
        s += parseInt((this.getMonth()+1)) < 0 ? '0' + (this.getMonth() + 1) + '-' : (this.getMonth()+1) + '-';
        s += parseInt(this.getDate()) < 10 ? '0' + this.getDate() : this.getDate();
        return (s);
    }
    
    
 4. //将时间降序排序 同一天的放到一个数组中
	let resData = [
		{name: '时间1', time: '2019-01-01 00:01:18'},
		{name: '时间2', time: '2019-01-01 12:01:18'},
		{name: '时间4', time: '2019-02-08 10:01:18'},
		{name: '时间5', time: '2019-02-08 20:20:48'},
		{name: '时间3', time: '2019-01-03 20:20:48'}
	];
	resData.forEach((item) => {
		item.sortTime = new Date(item.time).getTime();
		item.time0 = item.time.split(' ')[0];
		item.time1 = item.time.split(' ')[1];
	});
	resData.sort((a, b) => {
		return b.sortTime - a.sortTime;
	});
	
	let obj = {};
	resData.forEach((item) => {
		if (obj[item.time0]) {
			obj[item.time0].push(item);
		} else {
			obj[item.time0] = new Array();
			obj[item.time0].push(item);
		}
	});
	
	let arr = new Array();
	for (let key in obj) {
		arr.push(obj[key]);
	}
	// console.log(arr);
